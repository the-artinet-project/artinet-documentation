<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="params_8ts" kind="file" language="C++">
    <compoundname>params.ts</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">import<sp/>{<sp/>CorsOptions<sp/>}<sp/>from<sp/>&quot;cors&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A2AResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>RequestParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>AgentCard,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CancelTaskRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CancelTaskResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskPushNotificationRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskPushNotificationResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SendTaskRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SendTaskResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SendTaskStreamingRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SetTaskPushNotificationRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SetTaskPushNotificationResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Task,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>TaskResubscriptionRequest,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;../../types/extended-schema.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>TaskStore<sp/>}<sp/>from<sp/>&quot;./store.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>TaskHandler,<sp/>TaskContext<sp/>}<sp/>from<sp/>&quot;../../types/context.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>jayson<sp/>from<sp/>&quot;jayson&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>ErrorHandler<sp/>}<sp/>from<sp/>&quot;../../utils/common/errors.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>JSONRPCError<sp/>}<sp/>from<sp/>&quot;../../types/extended-schema.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>Response<sp/>}<sp/>from<sp/>&quot;express&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>JSONRPCServerType<sp/>=<sp/>jayson.Server;</highlight></codeline>
<codeline><highlight class="normal">export<sp/>const<sp/>JSONRPCServer<sp/>=<sp/>jayson.Server;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>JSONRPCCallback&lt;Res<sp/>=<sp/>A2AResponse<sp/>|<sp/>null&gt;<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>error:<sp/>JSONRPCError<sp/>|<sp/>null,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>result?:<sp/>Res</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>void;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Function<sp/>type<sp/>for<sp/>creating<sp/>a<sp/>JSON-RPC<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@param<sp/>params<sp/>Parameters<sp/>required<sp/>to<sp/>initialize<sp/>the<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@returns<sp/>A<sp/>configured<sp/>JSON-RPC<sp/>server<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>JSONRPCServerFactory<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>params:<sp/>CreateJSONRPCServerParams</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>JSONRPCServerType;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Function<sp/>type<sp/>for<sp/>creating<sp/>a<sp/>JSON-RPC<sp/>Method</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@param<sp/>params<sp/>Parameters<sp/>required<sp/>to<sp/>initialize<sp/>the<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@returns<sp/>A<sp/>configured<sp/>JSON-RPC<sp/>server<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>JSONRPCMethodHandler&lt;Params,<sp/>Result&gt;<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>requestParams:<sp/>Params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>callback:<sp/>JSONRPCCallback&lt;Result&gt;</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>Promise&lt;void&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>ActiveCancellations<sp/>set</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>ActiveCancellations<sp/>=<sp/>Set&lt;string&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>CloseStreamsForTask<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>CloseStreamsForTask<sp/>=<sp/>(taskId:<sp/>string)<sp/>=&gt;<sp/>void;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>CreateTaskContext<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>CreateTaskContext<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>task:<sp/>Task,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>message:<sp/>Message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>history:<sp/>Message[]</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>TaskContext;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>createJSONRPCServer<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>CreateJSONRPCServer<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>params:<sp/>CreateJSONRPCServerParams</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>JSONRPCServerType;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Interface<sp/>for<sp/>createJSONRPCServer<sp/>parameters</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>interface<sp/>CreateJSONRPCServerParams<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>taskStore:<sp/>TaskStore;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>card:<sp/>AgentCard;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>taskHandler:<sp/>TaskHandler;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>activeCancellations:<sp/>ActiveCancellations;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>createTaskContext:<sp/>CreateTaskContext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>closeStreamsForTask:<sp/>CloseStreamsForTask;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Parameters<sp/>for<sp/>creating<sp/>an<sp/>A2AServer<sp/>instance.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>A2AServerParams<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>handler:<sp/>TaskHandler;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>corsOptions?:<sp/>CorsOptions;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>port?:<sp/>number;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>basePath?:<sp/>string;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>taskStore?:<sp/>TaskStore;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>card?:<sp/>AgentCard;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>createJSONRPCServer?:<sp/>JSONRPCServerFactory;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fallbackPath?:<sp/>string;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>register?:<sp/>boolean;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Parameters<sp/>for<sp/>creating<sp/>an<sp/>Express<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>CreateExpressServerParams<sp/>=<sp/>Omit&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A2AServerParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&quot;createJSONRPCServer&quot;<sp/>|<sp/>&quot;taskStore&quot;<sp/>|<sp/>&quot;handler&quot;<sp/>|<sp/>&quot;register&quot;</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>&amp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Required&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Pick&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A2AServerParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;card&quot;<sp/>|<sp/>&quot;basePath&quot;<sp/>|<sp/>&quot;port&quot;<sp/>|<sp/>&quot;corsOptions&quot;<sp/>|<sp/>&quot;fallbackPath&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&gt;<sp/>&amp;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rpcServer:<sp/>JSONRPCServerType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>errorHandler:<sp/>ErrorHandler;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onTaskSendSubscribe:<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>req:<sp/>SendTaskStreamingRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res:<sp/>Response</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>=&gt;<sp/>Promise&lt;void&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onTaskResubscribe:<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>req:<sp/>TaskResubscriptionRequest,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res:<sp/>Response</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>=&gt;<sp/>Promise&lt;void&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>A2AMethodHandler<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Params<sp/>extends<sp/>RequestParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Result<sp/>extends<sp/>A2AResponse<sp/>|<sp/>null,</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>deps:<sp/>CreateJSONRPCServerParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>requestParams:<sp/>Params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>callback:<sp/>JSONRPCCallback&lt;Result&gt;</highlight></codeline>
<codeline><highlight class="normal">)<sp/>=&gt;<sp/>Promise&lt;void&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>SendTaskMethod<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>SendTaskMethod<sp/>=<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SendTaskRequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SendTaskResponse<sp/>|<sp/>null</highlight></codeline>
<codeline><highlight class="normal">&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>GetTaskMethod<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>GetTaskMethod<sp/>=<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskRequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskResponse<sp/>|<sp/>null</highlight></codeline>
<codeline><highlight class="normal">&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>CancelTaskMethod<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>CancelTaskMethod<sp/>=<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CancelTaskRequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CancelTaskResponse<sp/>|<sp/>null</highlight></codeline>
<codeline><highlight class="normal">&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>SetTaskPushNotificationMethod<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>SetTaskPushNotificationMethod<sp/>=<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SetTaskPushNotificationRequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SetTaskPushNotificationResponse<sp/>|<sp/>null</highlight></codeline>
<codeline><highlight class="normal">&gt;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Type<sp/>for<sp/>the<sp/>GetTaskPushNotificationMethod<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>used<sp/>by<sp/>consumers<sp/>to<sp/>implement<sp/>their<sp/>own<sp/>server<sp/>solutions</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>type<sp/>GetTaskPushNotificationMethod<sp/>=<sp/>A2AMethodHandler&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskPushNotificationRequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>GetTaskPushNotificationResponse<sp/>|<sp/>null</highlight></codeline>
<codeline><highlight class="normal">&gt;;</highlight></codeline>
    </programlisting>
    <location file="/Users/davronbekimamov/Desktop/content-synchro/artinet-sdk/src/server/interfaces/params.ts"/>
  </compounddef>
</doxygen>
