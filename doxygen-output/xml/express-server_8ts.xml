<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="express-server_8ts" kind="file" language="C++">
    <compoundname>express-server.ts</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">import<sp/>cors<sp/>from<sp/>&quot;cors&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>express,<sp/>{<sp/>NextFunction,<sp/>Request,<sp/>Response<sp/>}<sp/>from<sp/>&quot;express&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>CreateExpressServerParams<sp/>}<sp/>from<sp/>&quot;../interfaces/params.js&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Creates<sp/>an<sp/>Express<sp/>server<sp/>for<sp/>the<sp/>A2A<sp/>protocol.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Handles<sp/>task<sp/>creation,<sp/>streaming,<sp/>cancellation<sp/>and<sp/>more.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Uses<sp/>Jayson<sp/>for<sp/>JSON-RPC<sp/>handling.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>function<sp/>createExpressServer(params:<sp/>CreateExpressServerParams):<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>app:<sp/>express.Express;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>corsOptions,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>basePath,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rpcServer,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fallbackPath,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>errorHandler,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onTaskSendSubscribe,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onTaskResubscribe,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>=<sp/>params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>app<sp/>=<sp/>express();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.use(cors(corsOptions));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.use(express.json());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.get(&quot;/.well-known/agent.json&quot;,<sp/>(_,<sp/>res)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>res.json(card);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.get(fallbackPath,<sp/>(_,<sp/>res)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>res.json(card);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//SSE<sp/>Paths</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.post(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>basePath,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>async<sp/>(req:<sp/>Request,<sp/>res:<sp/>Response,<sp/>next:<sp/>NextFunction)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>body<sp/>=<sp/>req.body;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(body<sp/>&amp;&amp;<sp/>body.method)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(body.method<sp/>===<sp/>&quot;tasks/sendSubscribe&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>await<sp/>onTaskSendSubscribe(body,<sp/>res);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(body.method<sp/>===<sp/>&quot;tasks/resubscribe&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>await<sp/>onTaskResubscribe(body,<sp/>res);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(error)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next(error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//RPC<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.post(basePath,<sp/>rpcServer.middleware());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Fallback<sp/>error<sp/>handler</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>app.use(errorHandler);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>{<sp/>app<sp/>};</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/davronbekimamov/Desktop/content-synchro/artinet-sdk/src/server/lib/express-server.ts"/>
  </compounddef>
</doxygen>
