<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dispatcher_8ts" kind="file" language="C++">
    <compoundname>dispatcher.ts</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>AgentEngine,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>BaseExecutionContext,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ExecutionContext,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;./context.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>Protocol<sp/>}<sp/>from<sp/>&quot;./protocol.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>Service<sp/>}<sp/>from<sp/>&quot;./service.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{<sp/>v4<sp/>as<sp/>uuidv4<sp/>}<sp/>from<sp/>&quot;uuid&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>interface<sp/>DispatchOptions<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>services:<sp/>Partial&lt;Record&lt;Protocol,<sp/>Service&gt;&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>engine:<sp/>AgentEngine;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>interface<sp/>Dispatcher<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>addService(service:<sp/>Service):<sp/>void;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>onRequest&lt;Req<sp/>extends<sp/>BaseExecutionContext&gt;(req:<sp/>Req):<sp/>Promise&lt;void&gt;;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>class<sp/>ServiceDispatcher<sp/>implements<sp/>Dispatcher<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>readonly<sp/>services:<sp/>Partial&lt;Record&lt;Protocol,<sp/>Service&gt;&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>readonly<sp/>engine:<sp/>AgentEngine;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>constructor(options:<sp/>DispatchOptions)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>this.engine<sp/>=<sp/>options.engine;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>this.services<sp/>=<sp/>options.services;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>createExecutionContext&lt;Req<sp/>extends<sp/>BaseExecutionContext&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>req:<sp/>Req</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>):<sp/>ExecutionContext&lt;Req&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>id:<sp/>req.id<sp/>??<sp/>uuidv4(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>protocol:<sp/>req.protocol,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getRequestParams:<sp/>()<sp/>=&gt;<sp/>req.params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isCancelled:<sp/>()<sp/>=&gt;<sp/>false,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestContext:<sp/>req,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>async<sp/>onRequest&lt;Req<sp/>extends<sp/>BaseExecutionContext&gt;(req:<sp/>Req):<sp/>Promise&lt;void&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>service<sp/>=<sp/>this.services[req.protocol];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!service)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>new<sp/>Error(`Unknown<sp/>service:<sp/>${req.protocol}`);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>executionContext:<sp/>ExecutionContext&lt;Req&gt;<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ServiceDispatcher.createExecutionContext(req);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>await<sp/>service.execute({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>executionContext,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>engine:<sp/>this.engine,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>addService(service:<sp/>Service):<sp/>void<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>this.services[service.protocol]<sp/>=<sp/>service;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/davronbekimamov/Desktop/content-synchro/artinet-sdk/src/types/services/dispatcher.ts"/>
  </compounddef>
</doxygen>
