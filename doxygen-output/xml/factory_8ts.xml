<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="factory_8ts" kind="file" language="C++">
    <compoundname>factory.ts</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">import<sp/>{<sp/>logError<sp/>}<sp/>from<sp/>&quot;../../../utils/logging/log.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>INTERNAL_ERROR,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>INVALID_PARAMS,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SystemError,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;../../../utils/common/errors.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CreateJSONRPCServerParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>JSONRPCServer,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>JSONRPCMethodHandler,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A2AMethodHandler,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CreateJSONRPCServer,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;../../interfaces/params.js&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaultSendTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaultGetTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaultCancelTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaultSetTaskPushNotificationMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaultGetTaskPushNotificationMethod,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;./a2a-methods.js&quot;;</highlight></codeline>
<codeline><highlight class="normal">import<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A2AResponse,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Task,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>A2ARequest,</highlight></codeline>
<codeline><highlight class="normal">}<sp/>from<sp/>&quot;../../../types/index.js&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Creates<sp/>a<sp/>JSON-RPC<sp/>method<sp/>handler<sp/>from<sp/>a<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@param<sp/>deps<sp/>Dependencies<sp/>for<sp/>the<sp/>method</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@param<sp/>funct<sp/>The<sp/>function<sp/>to<sp/>be<sp/>used<sp/>as<sp/>the<sp/>method<sp/>handler</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@param<sp/>methodName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>method</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@returns<sp/>A<sp/>JSON-RPC<sp/>method<sp/>handler</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline><highlight class="normal">export<sp/>function<sp/>createJSONRPCMethod&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>RequestParamT<sp/>extends<sp/>A2ARequest[&quot;params&quot;],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Result<sp/>extends<sp/>A2AResponse<sp/>|<sp/>Task<sp/>|<sp/>Message<sp/>|<sp/>null,</highlight></codeline>
<codeline><highlight class="normal">&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>deps:<sp/>CreateJSONRPCServerParams,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>funct:<sp/>A2AMethodHandler&lt;RequestParamT,<sp/>Result&gt;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>methodName:<sp/>string<sp/>//<sp/>Pass<sp/>method<sp/>name<sp/>for<sp/>logging</highlight></codeline>
<codeline><highlight class="normal">):<sp/>JSONRPCMethodHandler&lt;RequestParamT,<sp/>Result&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>async<sp/>(requestParams,<sp/>callback)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!requestParams)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>INVALID_PARAMS(&quot;Missing<sp/>request<sp/>parameters&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Execute<sp/>the<sp/>specific<sp/>logic</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>funct(deps,<sp/>requestParams,<sp/>callback);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(error)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Centralized<sp/>error<sp/>handling<sp/>ONLY<sp/>for<sp/>exceptions<sp/>thrown<sp/>by<sp/>logic</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logError(&quot;createJSONRPCMethod&quot;,<sp/>`Exception<sp/>executing<sp/>method`,<sp/>error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(error<sp/>instanceof<sp/>SystemError)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>callback({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message:<sp/>error.message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code:<sp/>error.code,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data:<sp/>error.data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logError(methodName,<sp/>`Failed<sp/>to<sp/>process<sp/>Inner<sp/>Error`,<sp/>error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>internalError<sp/>=<sp/>INTERNAL_ERROR(error);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>callback({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message:<sp/>internalError.message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code:<sp/>internalError.code,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data:<sp/>internalError.data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">export<sp/>const<sp/>defaultCreateJSONRPCServer:<sp/>CreateJSONRPCServer<sp/>=<sp/>(params)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Create<sp/>handlers<sp/>using<sp/>the<sp/>generic<sp/>factory<sp/>and<sp/>specific<sp/>logic</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>taskSendMethod<sp/>=<sp/>createJSONRPCMethod(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>defaultSendTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;message/send&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>taskGetMethod<sp/>=<sp/>createJSONRPCMethod(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>defaultGetTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;tasks/get&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>taskCancelMethod<sp/>=<sp/>createJSONRPCMethod(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>defaultCancelTaskMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;tasks/cancel&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>taskPushNotificationSetMethod<sp/>=<sp/>createJSONRPCMethod(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>defaultSetTaskPushNotificationMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;tasks/pushNotificationConfig/set&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>taskPushNotificationGetMethod<sp/>=<sp/>createJSONRPCMethod(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>defaultGetTaskPushNotificationMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;tasks/pushNotificationConfig/get&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>new<sp/>JSONRPCServer(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;message/send&quot;:<sp/>taskSendMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tasks/get&quot;:<sp/>taskGetMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tasks/cancel&quot;:<sp/>taskCancelMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tasks/pushNotificationConfig/set&quot;:<sp/>taskPushNotificationSetMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tasks/pushNotificationConfig/get&quot;:<sp/>taskPushNotificationGetMethod,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>reviver:<sp/>undefined,<sp/>replacer:<sp/>undefined<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/mpickett/Artinet/artinet-sdk/src/server/lib/middleware/factory.ts"/>
  </compounddef>
</doxygen>
